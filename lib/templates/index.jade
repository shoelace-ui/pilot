doctype html
html
  head
    style
      :stylus
        @import '../stylesheets/index.styl'

    script(src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.0/jquery.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.1.3/ace.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/jade/1.3.0/jade.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.1.3/keybinding-vim.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.1.3/theme-github.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.1.3/theme-clouds.js")
    script(src="http://learnboost.github.io/stylus/try/stylus.min.js")

  body

    main(data-preload="#{globals.preload}")#main

      script
        include ../../build/build.js
        include ../render.js

      section
        h1= globals.pkg.name
        .defs-package
          h3
            = globals.pkg.description
            br
            = globals.pkg.author
            br
            = globals.pkg.repository.url

      each section, secidx in globals.sections
        section(class= section.name)
          hr
          h2= section.name
          if section.name === 'functions'
            ul.defs-links
              each def, defidx in section.defs
                li: a(href="##{def.name}-a") #{def.name}

          .defs
            each def, defidx in section.defs
              .def
                if def.value
                  != def.name + " = " + def.value

                each example, idx in def.examples
                  if example.stylus || example.markup
                    .example(id="#{def.name}-a")
                      - var prefix = section.name + "-" + def.name + "-" + idx + "-";
                      - var stylus = prefix + "stylus";
                      - var markup = prefix + "markup";
                      - var output = prefix + "output";


                      .summary
                        strong!= def.string
                        != def.summary
                        != def.tags
                      .editors
                        .stylus(id= stylus)= example.stylus
                        .markup(id= markup)= example.markup

                      script(
                        id="#{output}",
                        type="application/x-minstache",
                        data-codedoc='{"stylus": "#{stylus}", "markup": "#{markup}"}').
                        <style>{{!stylus}}</style>
                        <div>{{!markup}}</div>

                      script init("#{output}");